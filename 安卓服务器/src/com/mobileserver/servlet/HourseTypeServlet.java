package com.mobileserver.servlet;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;

import java.sql.Timestamp;
import java.util.List;

import com.mobileserver.dao.HourseTypeDAO;
import com.mobileserver.domain.HourseType;

import org.json.JSONStringer;

public class HourseTypeServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/*构造房屋类别业务层对象*/
	private HourseTypeDAO hourseTypeDAO = new HourseTypeDAO();

	/*默认构造函数*/
	public HourseTypeServlet() {
		super();
	}

	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		this.doPost(request, response);
	}

	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		/*获取action参数，根据action的值执行不同的业务处理*/
		String action = request.getParameter("action");
		if (action.equals("query")) {
			/*获取查询房屋类别的参数信息*/

			/*调用业务逻辑层执行房屋类别查询*/
			List<HourseType> hourseTypeList = hourseTypeDAO.QueryHourseType();

			/*2种数据传输格式，一种是xml文件格式：将查询的结果集通过xml格式传输给客户端
			StringBuffer sb = new StringBuffer();
			sb.append("<?xml version=\"1.0\" encoding=\"utf-8\"?>").append("\r\n")
			.append("<HourseTypes>").append("\r\n");
			for (int i = 0; i < hourseTypeList.size(); i++) {
				sb.append("	<HourseType>").append("\r\n")
				.append("		<typeId>")
				.append(hourseTypeList.get(i).getTypeId())
				.append("</typeId>").append("\r\n")
				.append("		<typeName>")
				.append(hourseTypeList.get(i).getTypeName())
				.append("</typeName>").append("\r\n")
				.append("	</HourseType>").append("\r\n");
			}
			sb.append("</HourseTypes>").append("\r\n");
			response.setCharacterEncoding("utf-8");
			PrintWriter out = response.getWriter();
			out.print(sb.toString());*/
			//第2种采用json格式(我们用这种)： 客户端查询的图书对象，返回json数据格式
			JSONStringer stringer = new JSONStringer();
			try {
			  stringer.array();
			  for(HourseType hourseType: hourseTypeList) {
				  stringer.object();
			  stringer.key("typeId").value(hourseType.getTypeId());
			  stringer.key("typeName").value(hourseType.getTypeName());
				  stringer.endObject();
			  }
			  stringer.endArray();
			} catch(Exception e){}
			response.setContentType("text/json; charset=UTF-8");  //JSON的类型为text/json
			response.getOutputStream().write(stringer.toString().getBytes("UTF-8"));
		} else if (action.equals("add")) {
			/* 添加房屋类别：获取房屋类别参数，参数保存到新建的房屋类别对象 */ 
			HourseType hourseType = new HourseType();
			int typeId = Integer.parseInt(request.getParameter("typeId"));
			hourseType.setTypeId(typeId);
			String typeName = new String(request.getParameter("typeName").getBytes("iso-8859-1"), "UTF-8");
			hourseType.setTypeName(typeName);

			/* 调用业务层执行添加操作 */
			String result = hourseTypeDAO.AddHourseType(hourseType);
			response.setCharacterEncoding("utf-8");
			PrintWriter out = response.getWriter();
			out.print(result);
		} else if (action.equals("delete")) {
			/*删除房屋类别：获取房屋类别的类别编号*/
			int typeId = Integer.parseInt(request.getParameter("typeId"));
			/*调用业务逻辑层执行删除操作*/
			String result = hourseTypeDAO.DeleteHourseType(typeId);
			response.setCharacterEncoding("utf-8");
			PrintWriter out = response.getWriter();
			/*将删除是否成功信息返回给客户端*/
			out.print(result);
		} else if (action.equals("updateQuery")) {
			/*更新房屋类别之前先根据typeId查询某个房屋类别*/
			int typeId = Integer.parseInt(request.getParameter("typeId"));
			HourseType hourseType = hourseTypeDAO.GetHourseType(typeId);

			// 客户端查询的房屋类别对象，返回json数据格式, 将List<Book>组织成JSON字符串
			JSONStringer stringer = new JSONStringer(); 
			try{
			  stringer.array();
			  stringer.object();
			  stringer.key("typeId").value(hourseType.getTypeId());
			  stringer.key("typeName").value(hourseType.getTypeName());
			  stringer.endObject();
			  stringer.endArray();
			}
			catch(Exception e){}
			response.setContentType("text/json; charset=UTF-8");  //JSON的类型为text/json
			response.getOutputStream().write(stringer.toString().getBytes("UTF-8"));
		} else if(action.equals("update")) {
			/* 更新房屋类别：获取房屋类别参数，参数保存到新建的房屋类别对象 */ 
			HourseType hourseType = new HourseType();
			int typeId = Integer.parseInt(request.getParameter("typeId"));
			hourseType.setTypeId(typeId);
			String typeName = new String(request.getParameter("typeName").getBytes("iso-8859-1"), "UTF-8");
			hourseType.setTypeName(typeName);

			/* 调用业务层执行更新操作 */
			String result = hourseTypeDAO.UpdateHourseType(hourseType);
			response.setCharacterEncoding("utf-8");
			PrintWriter out = response.getWriter();
			out.print(result);
		}
	}
}
